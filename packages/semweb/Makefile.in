################################################################
# Makefile template for SWI-Prolog RDF-DB package
#
# This template is used by configure to create Makefile.  See
# the file INSTALL for further installation instructions.
#
# License: LGPL
#
# Special targets:
#
#	ln-install		Install with symbolic links
#
# Author: Jan Wielemaker (wielemak@science.uva.nl)
################################################################

.SUFFIXES: .tex .dvi .doc .pl

ifeq (@PROLOG_SYSTEM@,yap)

prefix = @prefix@
exec_prefix = @exec_prefix@
ROOTDIR = $(prefix)
EROOTDIR = @exec_prefix@
abs_top_builddir = @abs_top_builddir@

srcdir=@srcdir@

BINDIR = $(EROOTDIR)/bin
LIBDIR=@libdir@
YAPLIBDIR=@libdir@/Yap
SHAREDIR=$(ROOTDIR)/share/Yap

SHELL=@SHELL@
PL=@INSTALL_ENV@ $(DESTDIR)$(BINDIR)/yap $(DESTDIR)$(YAPLIBDIR)/startup.yss
EXDIR=$(YAPLIBDIR)/examples/http
LN_S=@LN_S@
#
#
DEFS=@DEFS@ -D_YAP_NOT_INSTALLED_=1
CC=@CC@
CFLAGS= @SHLIB_CFLAGS@ $(YAP_EXTRAS) $(DEFS) -I$(srcdir) -I../.. -I$(srcdir)/../../include @CPPFLAGS@
MKINDEX=true


SO=@SO@
#4.1VPATH=@srcdir@:@srcdir@/OPTYap
CWD=$(PWD)
#

LD=@DO_SECOND_LD@	@SHLIB_LD@
LDFLAGS=@EXTRA_LIBS_FOR_SWIDLLS@ @LDFLAGS@

BINTARGET=$(DESTDIR)$(YAPLIBDIR)
PLTARGET=$(DESTDIR)$(SHAREDIR)/semweb

FINAL_BINTARGET=$(YAPLIBDIR)
FINAL_PLTARGET=$(SHAREDIR)

%.o: $(srcdir)/%.c
		$(CC) -c $(CFLAGS) $< -o $@

else

PL=@PL@
PLBASE=@PLBASE@
PLARCH=@PLARCH@
PLINCL=@PLINCL@
PKGDOC=$(PLBASE)/doc/packages
PCEHOME=../xpce
LIBDIR=$(PLBASE)/library/semweb

CC=@CC@
COFLAGS=@COFLAGS@
CWFLAGS=@CWFLAGS@
CMFLAGS=@CMFLAGS@
CIFLAGS=-I.
CFLAGS=$(COFLAGS) $(CWFLAGS) $(CMFLAGS) $(CIFLAGS) @DEFS@
LIBS=@LIBS@
NETLIBS=@NETLIBS@

PUBLICPL=swipl
DOCTOTEX=$(PCEHOME)/bin/doc2tex
PLTOTEX=$(PUBLICPL) -q -s pltotex.pl -g pltotex --
DOC=semweb
TEX=$(DOC).tex	rdfturtle.tex rdfturtlewrite.tex rdfcompare.tex \
		rdfportray.tex rdflib.tex sparqlclient.tex
DVI=$(DOC).dvi
PDF=$(DOC).pdf
RUNTEX=../../man/runtex

LD=@LD@
LDFLAGS=@LDSOFLAGS@

endif

INSTALL=@INSTALL@
INSTALL_PROGRAM=@INSTALL_PROGRAM@
INSTALL_DATA=@INSTALL_DATA@

include $(srcdir)/common.mk

TARGETS=	rdf_db.@SO@ turtle.@SO@

RDFDBOBJ=	rdf_db.o atom.o lock.o md5.o avl.o atom_map.o debug.o \
		hash.o murmur.o

all:		$(TARGETS)

rdf_db.@SO@:	$(RDFDBOBJ)
		$(LD) $(LDFLAGS) -o $@ $(RDFDBOBJ) $(LIBS)
turtle.@SO@:	turtle.o
		$(LD) $(LDFLAGS) -o $@ turtle.o $(LIBS)

turtle.o:	$(srcdir)/turtle.c $(srcdir)/turtle_chars.c

install:	$(TARGETS) $(LIBPL)
		mkdir -p $(BINTARGET)
		for f in $(TARGETS); do \
		  $(INSTALL) -m 755 $$f $(BINTARGET); \
		done
		mkdir -p $(PLTARGET)
		for f in $(DATA) $(LIBPL) $(srcdir)/README; do \
		  $(INSTALL_DATA) $$f $(PLTARGET); \
		done
		$(PL) -f none -g make -t halt

ln-install::
		$(MAKE) INSTALL=../ln-install \
			INSTALL_DATA=../ln-install \
			install

rpm-install:	install

html-install::
		mkdir -p $(DESTDIR)$(PKGDOC)
		$(INSTALL) -m 644 $(DOC).html $(DESTDIR)$(PKGDOC)
		$(INSTALL) -m 644 $(srcdir)/modules.gif $(DESTDIR)$(PKGDOC)

pdf-install::
		mkdir -p $(DESTDIR)$(PKGDOC)
		$(INSTALL) -m 644 $(DOC).pdf $(DESTDIR)$(PKGDOC)

uninstall::
		(cd $(PLBASE)/lib/$(PLARCH) && rm -f $(TARGETS))
		(cd $(PLBASE)/library && rm -f $(LIBPL))
		$(PL) -f none -g make -t halt

rdf_db.o:	$(srcdir)/quote.c $(srcdir)/unicode_map.c

################################################################
# Documentation
################################################################

pdf:		$(PDF)

$(DVI):		$(TEX)
		$(RUNTEX) $(DOC)

$(PDF):		$(TEX)
		$(RUNTEX) --pdf $(DOC)

html:		$(TEX)
		latex2html $(DOC)

$(TEX):		$(DOCTOTEX)

rdfturtle.tex:	$(srcdir)/rdf_turtle.pl
		$(PLTOTEX) --section 'library(semweb/rdf_turtle)'
rdfturtlewrite.tex:	$(srcdir)/rdf_turtle_write.pl
		$(PLTOTEX) --section 'library(semweb/rdf_turtle_write)'
rdfcompare.tex:	$(srcdir)/rdf_compare.pl
		$(PLTOTEX) --section 'library(semweb/rdf_compare)'
rdfportray.tex:	$(srcdir)/rdf_portray.pl
		$(PLTOTEX) --section 'library(semweb/rdf_portray)'
sparqlclient.tex:	$(srcdir)/sparql_client.pl
		$(PLTOTEX) --section 'library(semweb/sparql_client)'

.doc.tex:
		$(DOCTOTEX) $*.doc > $*.tex

################################################################
# Check
################################################################

check::
		$(PL) -q -f $(srcdir)/test_rdf_db.pl -g test_rdf_db,halt -t 'halt(1)'
		$(PL) -q -f $(srcdir)/litmap_test.pl -g test,halt -t 'halt(1)'
		$(PL) -q -f $(srcdir)/test.pl -g run_tests,halt -t 'halt(1)'
		$(PL) -q -f $(srcdir)/test_turtle.pl -g test_turtle,halt -t 'halt(1)'


################################################################
# Clean
################################################################

clean:		texclean
		rm -f $(OBJ) *~ *.o *% a.out core config.log

texclean:
		rm -f $(TEX) $(DOC).aux $(DOC).log $(DOC).out $(DOC).toc \
		      $(DOC).ilg

distclean:	clean
		rm -f $(TARGETS) config.cache config.h config.status Makefile

